import type * as ts from 'typescript';
import type { VueCompilerOptions } from '../types';
export declare function eachInterpolationSegment(ts: typeof import('typescript'), code: string, ast: ts.SourceFile, localVars: Map<string, number>, identifiers: Set<string>, vueOptions: VueCompilerOptions, ctxVars?: {
    text: string;
    isShorthand: boolean;
    offset: number;
}[]): Generator<[fragment: string, offset: number | undefined, isJustForErrorMapping?: boolean]>;
export declare function collectVars(ts: typeof import('typescript'), node: ts.Node, ast: ts.SourceFile, result: string[]): void;
